name: Aoede Main Flow
'on': pull_request

jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: make install

      - name: Build Production
        run: make build

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build
          restore-keys: |
            ${{ runner.os }}-build

      - name: Cache ~/.npm
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  unit-tests:
    runs-on: ubuntu-20.04
    needs: build
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies from cache
        run: make install

      - name: Run Tests
        run: make test-unit

  cypress-tests:
    runs-on: ubuntu-latest
    container: cypress/browsers:node16.13.0-chrome95-ff94
    needs: build
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build

      - name: Install from npm-cache
        run: make install

      - name: Get build from cache
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: make build

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: make build
          start: make dev
          browser: chrome
          record: true
          wait-on: "http://localhost:4200"
          wait-on-timeout: 120
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: Save Cypress Videos
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  build_and_deploy:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    needs: [unit-tests, cypress-tests, build]
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: make install

      - name: Get build from cache
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: make build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AOEDE_DEV }}'
          projectId: aoede-dev
